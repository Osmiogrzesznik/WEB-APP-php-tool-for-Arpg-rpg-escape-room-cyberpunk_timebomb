 - every Time somebody sees a table with all devices status 
active inactive should be treated as ARmed , disarmed
 find some way to address these cells and update them in inline js.
maybe try dataset in conjuction with class=" updateAbledate"

TODO:

ctive as understood by "being recently touched" should be
 calculated automatically based on the last
 updated date. already in js showalldevices could actively
poll every minute or 30 sec to fetch lastUpdated 
Timestamp 
    js would constantly calculate difference between Date.now
    and value in table to show how long ago somebody was touching
    the bomb
    
TODO: on each touch listener should remember 
the two timestamps, one get from db , and one registered
 on each touch of window. 
setInterval function should be active: 
    check if lasttouchtimestamp 
    is not null and if it is different from currently 
    hold in js memory DBtimestamp(not fetched from DB)    


try not to do $result->fetch 
call method on QUERY pdo object
maybe execute returns just bool



DONE:- modified index.php to react to action=registerDevice POST and 
	to add device to DB checking all input.

TODO:  display all devices in a table if user is logged in
	-when device just added (show logged in)
	 later  -> WHERE user_creator_id = :logged_user_id in showalldevices to allow many users to have separate bombsets


Done TODO : rewrite mechanism of clock to be interested only in showing countdown to given date
      

- make clock beep faster at the end PROBLEM:SOUNDS ARE LOST)
todo:display feedback in red border

- modify scripts so they are proper js classes 
- clock controller should create its components on its own
user just creates counterCNT'ainer
        


-create registration of device
	try to copy user registration mechanism but with ip's instead of username password
	if device not registered 2 options: give your admin cred's and device
	DO not save ip in db if user-(Admin) is not logged in 
	if device is registered automatically should become logged in ---COMPLETE 
	6 states connecting device:  (logged = !empty$SESSION) 
								(registered = logged every bomb immediately automatically logs in )
			1		user not logged and device not registered not logged -> user registration or login
			2		user logged and device not registered not logged -> user choice should this device be 
						bomb or admin panel
			3		user not logged and device registered as bomb-> interface bomb
			4		user logged and device registered as bomb-> ?
			5		user not logged and device registered as admin panel -> login
			6		user logged and device registered as admin panel -> admin

10
00
01
11

	if device is registered as a bomb after user used it to log in user should be logged out
	each user chooses ip which serves as his administration panel

	IDEA: user should not require to go to device to activate it as bomb
		every time device connects it is already stored in db
		user chooses in db which to activate
		PROBLEMS: polling needed  and maybe a lot of problems with separate paths for all this ajax post requests 

